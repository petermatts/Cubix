name: C++ CI

on:
    push:
        branches: ["**"]
    pull_request:
        branches: ["**"]

jobs:
    build-and-test:
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
        continue-on-error: true #?
        runs-on: ${{ matrix.os }}

        env:
            BUILD_DIR: build

        steps:
            - name: Checkout source
              uses: actions/checkout@v4
              with:
                  submodules: recursive # If GoogleTest is added as a submodule

            # ===== Linux Setup =====
            - name: Install dependencies (Linux)
              if: runner.os == 'Linux'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y cmake g++-13 gcc-13 build-essential
            - name: Set compiler (Linux)
              if: runner.os == 'Linux'
              run: |
                  echo "CC=gcc-13" >> $GITHUB_ENV
                  echo "CXX=g++-13" >> $GITHUB_ENV

            # ===== macOS Setup =====
            - name: Install dependencies (macOS)
              if: runner.os == 'macOS'
              run: brew install swig

            # ===== Windows Setup =====
            # - name: Install dependencies (Windows)
            #   if: runner.os == 'Windows'
            #   run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y

            # ===== Build & Test =====
            - name: Create build directory
              run: mkdir -p ${{ env.BUILD_DIR }}

            - name: Run CMake configure
              run: cmake -S . -B ${{ env.BUILD_DIR }} -DCMAKE_BUILD_TYPE=Release

            - name: Build the project
              run: cmake --build ${{ env.BUILD_DIR }} --config Release

            - name: Debug List test executables
              if: runner.os == 'Windows'
              run: dir
              working-directory: ${{ env.BUILD_DIR }}

            - name: Run tests
              working-directory: ${{ env.BUILD_DIR }}/tests
              run: |
                  ./cubix_tests
                  # ctest --output-on-failure --build-config Release

            - name: Upload test logs (if failed)
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: test-logs-${{ matrix.os }}
                  path: ${{ env.BUILD_DIR }}/Testing/Temporary/LastTest.log
